<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns="http://shield.karlwilcox.com/2010/BlazonML"
    targetNamespace="http://shield.karlwilcox.com/2010/BlazonML"
    xmlns:blazon="http://shield.karlwilcox.com/2010/BlazonML">

    <xs:element name="blazon">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="shield"/>
                <xs:element minOccurs="0" name="crest">
                    <xs:annotation>
                        <xs:documentation>For future expansion</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="supporters">
                    <xs:annotation>
                        <xs:documentation>For future expansion</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="motto">
                    <xs:annotation>
                        <xs:documentation>For future expansion</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="messages">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" name="message">
                                <xs:annotation>
                                    <xs:documentation>Content is free form error message</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:any namespace="##any"/>
                                    </xs:sequence>
                                    <xs:attribute name="category"/>
                                    <xs:attribute name="filename"/>
                                    <xs:attribute name="line"/>
                                    <xs:attribute ref="tokens"/>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="blazonText" use="required" type="xs:string">
                <xs:annotation>
                    <xs:documentation>This is a plain text version of the blazon, as input by the user</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="blazonTokens" use="required">
                <xs:annotation>
                    <xs:documentation>This is a blank separated list of tokens created by the lexical analyser. The "tokens" attributes of other elements are zero based references to this list.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="schemaVersion"/>
            <xs:attribute name="creatorName">
                <xs:annotation>
                    <xs:documentation>Free format string for use of the program that generated this xml</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="creatorVersion"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="shield">
        <xs:complexType>
            <xs:sequence minOccurs="0">
                <xs:choice>
                    <xs:element name="plain">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element ref="tincture"/>
                                <xs:element minOccurs="0" ref="tincture"/>
                                <xs:element ref="ords_chgs" minOccurs="0"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="dimidiated">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element ref="shield"/>
                                <xs:element ref="shield"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="impaled">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element ref="shield"/>
                                <xs:element ref="shield"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="quartered">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element ref="shield"/>
                                <xs:element ref="shield"/>
                                <xs:element ref="shield"/>
                                <xs:element ref="shield"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element ref="missing"/>
                </xs:choice>
                <xs:element minOccurs="0" ref="overall"/>
            </xs:sequence>
            <xs:attribute ref="ID"/>
            <xs:attribute ref="IDREF"/>
            <xs:attribute name="index">
                <xs:annotation>
                    <xs:documentation>If on a divided shield, the index gives the ordering of sub shields (numerical order, left to right, top to bottom)</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="overall">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="ords_chgs"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="tincture">
        <xs:complexType>
            <xs:choice>
                <xs:element name="proper">
                    <xs:complexType>
                        <xs:attributeGroup ref="colourAttr"/>
                    </xs:complexType>
                </xs:element>
                <xs:element ref="colour"/>
                <xs:element name="fur">
                    <xs:complexType>
                        <xs:attribute name="name"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="treatment">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element ref="tincture"/>
                            <xs:element ref="tincture"/>
                        </xs:sequence>
                        <xs:attribute name="name"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="semyDe">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element ref="tincture"/>
                            <xs:choice>
                                <xs:element ref="charge"/>
                                <xs:element ref="missing"/>
                            </xs:choice>
                        </xs:sequence>
                        <xs:attribute name="name"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="counterChanged"/>
                <xs:element ref="division"/>
            </xs:choice>
            <xs:attribute ref="tokens"/>
            <xs:attribute default="1" name="index" type="xs:nonNegativeInteger" use="optional"/>
            <xs:attribute name="origin">
                <xs:annotation>
                    <xs:documentation>This is the "origin" of the tincture, i.e. where it came from. See the enumerations for details of each. It is possible that in future the elements "proper" and "implied" may be replaced by this attribute.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="given">
                            <xs:annotation>
                                <xs:documentation>This tincture was explicitly supplied in the blazon, in the expected place.</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="default">
                            <xs:annotation>
                                <xs:documentation>No explicit tincture was given but the charge has a default tincture, for example an ermine tail is sable unless otherwise given.</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="pending">
                            <xs:annotation>
                                <xs:documentation>This tincture was explicitly given but later in the blazon, possibly shared with another charge for example.</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="proper">
                            <xs:annotation>
                                <xs:documentation>This charge is always the same tincture, and may only be given the explicit tincture "proper".</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="implied"/>
                        <xs:enumeration value="missing"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="division">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="tincture"/>
                <xs:element ref="tincture"/>
                <xs:element minOccurs="0" ref="tincture"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="modifier"/>
                <xs:element minOccurs="0" ref="division">
                    <xs:annotation>
                        <xs:documentation>This is a second division, normally "counterchanged" of the first</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="type" use="required"/>
            <xs:attribute name="subType" use="required"/>
            <xs:attribute ref="tokens"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="charge">
        <xs:annotation>
            <xs:documentation/>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence minOccurs="0">
                <xs:element ref="tincture" minOccurs="0"/>
                <xs:choice minOccurs="0">
                    <xs:element maxOccurs="unbounded" name="feature" minOccurs="0">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element minOccurs="0" ref="colour"/>
                            </xs:sequence>
                            <xs:attribute name="name"/>
                        </xs:complexType>
                    </xs:element>
                    <xs:element maxOccurs="unbounded" ref="modifier" minOccurs="0"/>
                </xs:choice>
            </xs:sequence>
            <xs:attribute name="type" use="required"/>
            <xs:attribute name="subType" use="required"/>
            <xs:attribute name="number" use="required"/>
            <xs:attribute ref="tokens"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="ordinary">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="tincture"/>
                <xs:element minOccurs="0" ref="tincture"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="modifier"/>
            </xs:sequence>
            <xs:attribute name="type" use="required"/>
            <xs:attribute name="subType" use="required"/>
            <xs:attribute name="number" type="xs:positiveInteger"/>
            <xs:attribute ref="tokens"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="ords_chgs">
        <xs:complexType>
            <xs:sequence>
                <xs:choice maxOccurs="unbounded">
                    <xs:element ref="ordinary"/>
                    <xs:element ref="charge"/>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="colour">
        <xs:complexType>
            <xs:attributeGroup ref="colourAttr"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="modifier">
        <xs:complexType>
            <xs:choice minOccurs="0">
                <xs:element ref="tincture"/>
                <xs:element ref="charge"/>
                <xs:element ref="missing"/>
                <xs:element ref="shield"/>
                <xs:element ref="ordinary"/>
                <xs:element ref="modifier"/>
            </xs:choice>
            <xs:attribute name="name" use="required"/>
            <xs:attribute name="param"/>
            <xs:attribute ref="tokens"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="missing">
        <xs:annotation>
            <xs:documentation>This indicates that the parser was unable to find a required element. It is up to the implementor how this is represented graphically</xs:documentation>
        </xs:annotation>
        <xs:complexType/>
    </xs:element>
    <xs:attribute name="tokens" type="xs:string">
        <xs:annotation>
            <xs:documentation>This is the sequence of tokens that were "consumed" by the parsing process in reading this tincture. It may be empty if the tincture is implied, or is part of a larger structure.</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute name="IDREF" type="xs:IDREF">
        <xs:annotation>
            <xs:documentation>If an element has an IDREF all additional content is optional. If present the additional content "overrides" that from the referred element.</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ID" type="xs:ID">
        <xs:annotation>
            <xs:documentation>IDs are only required if an element is referenced</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup name="colourAttr">
        <xs:attribute name="name"/>
        <xs:attribute name="spec"/>
    </xs:attributeGroup>
</xs:schema>
