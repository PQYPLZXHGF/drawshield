<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns="http://shield.karlwilcox.com/2010/BlazonML"
    targetNamespace="http://shield.karlwilcox.com/2010/BlazonML"
    xmlns:blazon="http://shield.karlwilcox.com/2010/BlazonML">

    <xs:element name="blazon">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="shield"/>
                <xs:element minOccurs="0" name="crest">
                    <xs:annotation>
                        <xs:documentation>For future expansion</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="supporters">
                    <xs:annotation>
                        <xs:documentation>For future expansion</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="motto">
                    <xs:annotation>
                        <xs:documentation>For future expansion</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="errors">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" name="error">
                                <xs:annotation>
                                    <xs:documentation>Content is free form error message</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:any namespace="##any"/>
                                    </xs:sequence>
                                    <xs:attribute name="code"/>
                                    <xs:attribute name="filename"/>
                                    <xs:attribute name="line"/>
                                    <xs:attribute ref="tokNum"/>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="blazonText" use="required" type="xs:string">
                <xs:annotation>
                    <xs:documentation>This is a plain text version of the blazon, as input by the user</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="blazonTokens" use="required">
                <xs:annotation>
                    <xs:documentation>This is a blank separated list of tokens created by the lexical analyser. The "tokNum" attributes of other elements are zero based references to this list.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="schemaVersion"/>
            <xs:attribute name="creatorName">
                <xs:annotation>
                    <xs:documentation>Free format string for use of the program that generated this xml</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="creatorVersion"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="shield">
        <xs:complexType>
            <xs:sequence minOccurs="0">
                <xs:choice>
                    <xs:element name="plain">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element ref="tincture"/>
                                <xs:element minOccurs="0" ref="tincture"/>
                                <xs:element ref="ords_chgs" minOccurs="0"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="dimidiated">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element ref="shield"/>
                                <xs:element ref="shield"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="impaled">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element ref="shield"/>
                                <xs:element ref="shield"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="quartered">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element ref="shield"/>
                                <xs:element ref="shield"/>
                                <xs:element ref="shield"/>
                                <xs:element ref="shield"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element ref="missing"/>
                </xs:choice>
                <xs:element minOccurs="0" ref="overall"/>
            </xs:sequence>
            <xs:attribute ref="ID"/>
            <xs:attribute ref="IDREF"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="overall">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="ords_chgs"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="tincture">
        <xs:complexType>
            <xs:choice>
                <xs:element name="proper">
                    <xs:complexType>
                        <xs:attributeGroup ref="colourAttr"/>
                    </xs:complexType>
                </xs:element>
                <xs:element ref="colour"/>
                <xs:element name="fur">
                    <xs:complexType>
                        <xs:attribute name="name"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="treatment">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element ref="tincture"/>
                            <xs:element ref="tincture"/>
                        </xs:sequence>
                        <xs:attribute name="name"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="semyDe">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element ref="tincture"/>
                            <xs:choice>
                                <xs:element ref="charge"/>
                                <xs:element ref="missing"/>
                            </xs:choice>
                        </xs:sequence>
                        <xs:attribute name="name"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="counterChanged"/>
                <xs:element ref="division"/>
                <xs:element name="implied">
                    <xs:annotation>
                        <xs:documentation>Indicates that the tincture is implied by the object to which it is applied, for example a fountain is always white and blue.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element ref="missing"/>
            </xs:choice>
            <xs:attribute ref="tokNum"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="division">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="tincture"/>
                <xs:element ref="tincture"/>
                <xs:element minOccurs="0" ref="tincture"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="modifier"/>
                <xs:element minOccurs="0" ref="division">
                    <xs:annotation>
                        <xs:documentation>This is a second division, normally "counterchanged" of the first</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="type" use="required"/>
            <xs:attribute name="subType" use="required"/>
            <xs:attribute name="lineType"/>
            <xs:attribute ref="tokNum"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="charge">
        <xs:annotation>
            <xs:documentation/>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence minOccurs="0">
                <xs:element ref="tincture" minOccurs="0"/>
                <xs:choice minOccurs="0">
                    <xs:element maxOccurs="unbounded" name="feature" minOccurs="0">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element minOccurs="0" ref="colour"/>
                            </xs:sequence>
                            <xs:attribute name="name"/>
                        </xs:complexType>
                    </xs:element>
                    <xs:element maxOccurs="unbounded" ref="modifier" minOccurs="0"/>
                </xs:choice>
            </xs:sequence>
            <xs:attribute name="type" use="required"/>
            <xs:attribute name="subType" use="required"/>
            <xs:attribute name="number" use="required"/>
            <xs:attribute ref="tokNum"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="ordinary">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="tincture"/>
                <xs:element minOccurs="0" ref="tincture"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="modifier"/>
            </xs:sequence>
            <xs:attribute name="type" use="required"/>
            <xs:attribute name="subType" use="required"/>
            <xs:attribute name="lineType" use="required"/>
            <xs:attribute name="number" type="xs:positiveInteger"/>
            <xs:attribute ref="tokNum"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="ords_chgs">
        <xs:complexType>
            <xs:sequence>
                <xs:choice maxOccurs="unbounded">
                    <xs:element ref="ordinary"/>
                    <xs:element ref="charge"/>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="colour">
        <xs:complexType>
            <xs:attributeGroup ref="colourAttr"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="modifier">
        <xs:complexType>
            <xs:choice minOccurs="0">
                <xs:element ref="tincture"/>
                <xs:element ref="charge"/>
                <xs:element ref="missing"/>
                <xs:element ref="shield"/>
                <xs:element ref="ordinary"/>
            </xs:choice>
            <xs:attribute name="name" use="required"/>
            <xs:attribute name="param"/>
            <xs:attribute ref="tokNum"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="missing">
        <xs:annotation>
            <xs:documentation>This indicates that the parser was unable to find a required element. It is up to the implementor how this is represented graphically</xs:documentation>
        </xs:annotation>
        <xs:complexType/>
    </xs:element>
    <xs:attribute name="tokNum" type="xs:nonNegativeInteger">
        <xs:annotation>
            <xs:documentation>This is a zero based reference to the list of tokens in the top level attribute blazonTokens</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute name="IDREF" type="xs:IDREF">
        <xs:annotation>
            <xs:documentation>If an element has an IDREF all additional content is optional. If present the additional content "overrides" that from the referred element.</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ID" type="xs:ID">
        <xs:annotation>
            <xs:documentation>IDs are only required if an element is referenced</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup name="colourAttr">
        <xs:attribute name="name"/>
        <xs:attribute name="spec"/>
    </xs:attributeGroup>
</xs:schema>
